name: CI
on:
  pull_request:
    branches:
    - main
  push:
    branches:
    - main


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3   

      - name: Ruff check 
        run: uv run ruff check --output-format=github

      - name: Ruff format
        run: uv run ruff format --check
   
  test:
    needs: lint
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12", "3.13"]
    
    steps:
      - uses: actions/checkout@v4
      - uses: astral-sh/setup-uv@v3
      - run: UV_PYTHON=${{ matrix.python-version }} uv run pytest --junitxml=pytest.xml --cov-report "xml:coverage.xml" --cov=shbin tests/

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          hide-report: false
          pytest-xml-coverage-path: coverage.xml
          junitxml-path: pytest.xml
      - name: Check the output coverage
        run: |
          echo "Coverage Percantage - ${{ steps.coverageComment.outputs.coverage }}"
          echo "Coverage Color - ${{ steps.coverageComment.outputs.color }}"
          echo "Coverage Html - ${{ steps.coverageComment.outputs.coverageHtml }}"
          echo "Summary Report - ${{ steps.coverageComment.outputs.summaryReport }}"
          
          echo "Coverage Warnings - ${{ steps.coverageComment.outputs.warnings }}"

          echo "Coverage Errors - ${{ steps.coverageComment.outputs.errors }}"
          echo "Coverage Failures - ${{ steps.coverageComment.outputs.failures }}"
          echo "Coverage Skipped - ${{ steps.coverageComment.outputs.skipped }}"
          echo "Coverage Tests - ${{ steps.coverageComment.outputs.tests }}"
          echo "Coverage Time - ${{ steps.coverageComment.outputs.time }}"
          echo "Not Success Test Info - ${{ steps.coverageComment.outputs.notSuccessTestInfo }}"